import telebot
from telebot import types
import psycopg2
from psycopg2 import Error
import datetime
import calendar

def findDay(date):  
    born = datetime.datetime.strptime(date, '%Y %m %d').weekday()
    return (calendar.day_name[born])

def findParityToday():
    today = str(datetime.date.today())
    a = ''
    y = ''
    d = ''
    m = ''
    b = 0
    for element in today:
        if element.isdigit():
            if b < 4:
                y = y + element
            if b > 4 and b < 6:
                m = m + element
            if b > 6:
                d = d + element        
            a = a + element
            b += 1
        else:
            a = a + ' '
    # print(a)
    weeknumb = datetime.date(int(y), int(m), int(d)).isocalendar().week
    # print(weeknumb)
    if weeknumb % 2 == 1:#!!!!!!!!!!
        return ('—á–µ—Ç–Ω–∞—è')
    else:
        return ('–Ω–µ—á–µ—Ç–Ω–∞—è')

# findParityToday()


token = '6108061509:AAGCA-l22QyG2shAUlzTVAvHxrtPB9_TDd8'
bot = telebot.TeleBot(token)

def db_req(a):
    try:
        connection = psycopg2.connect(user="postgres",
                                  password="manta2",
                                  host="127.0.0.1",
                                  port="5432",
                                  database="timetable")
        cursor = connection.cursor()
        cursor.execute(a)
        record = list(cursor.fetchall())
        return record

    except (Exception, Error) as error:
        return print(error)
    finally:
        if connection:
            cursor.close()
            connection.close()

@bot.message_handler(commands=['start'])
def start(message):
    keyboard = types.ReplyKeyboardMarkup()
    keyboard.row("/help", "/timetable", "/week", "/mtuci", "/tech_support")
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —Å–≤–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è?', reply_markup=keyboard)

@bot.message_handler(commands=['help'])
def start_message1(message):
    bot.send_message(message.chat.id, 
'–¶–µ–ª—å –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ - –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.\n\n–ï–≥–æ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /timetable, –≤—ã–±—Ä–∞–≤ –Ω—É–∂–Ω—ã–π –¥–µ–Ω—å –∏–ª–∏ –Ω–µ–¥–µ–ª—é\n\n–ö–æ–º–∞–Ω–¥–∞ /week –ø–æ–∫–∞–∂–µ—Ç, –∫–∞–∫–∞—è —Å–µ–π—á–∞—Å –Ω–µ–¥–µ–ª—è.\n\n–ö–æ–º–∞–Ω–¥–∞ /mtuci –≤—ã–≤–µ–≤–µ–¥–µ—Ç –≤–∞—Å –Ω–∞ —Ä–æ–¥–Ω–æ–π —Å–∞–π—Ç\n\n–ö–æ–º–∞–Ω–¥–∞ /tell –¥–∞—Å—Ç –±–æ—Ç—É —Å–∫–∞–∑–∞—Ç—å –≤–∞–º –ø–∞—Ä—É —Å–ª–æ–≤, –Ω–æ –µ—ë –Ω—É–∂–Ω–æ –µ—â—ë —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å. –í–ø–µ—Ä—ë–¥!\n\n–°—É—â–µ—Å—Ç–≤—É–µ—Ç —Å–µ–∫—Ä–µ—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ñ–æ—Ä–º–∞—Ç–∞ /"–ª–æ–≥–∏–Ω —Å–æ–∑–¥–∞—Ç–µ–ª—è"father)')

@bot.message_handler(commands=['mtuci'])
def start_message2(message):
    bot.send_message(message.chat.id, '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –≤—É–∑–∞ - https://mtuci.ru/')

@bot.message_handler(commands=['emojiFM'])
def secret_message1(message):
    bot.send_message(message.chat.id, 'üòò')

@bot.message_handler(commands=['creator'])
def secret_message2(message):
    bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'))
    bot.send_message(message.chat.id, 'CREATOR')

@bot.message_handler(commands=['og'])
def secret_message3(message):
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEI1VhkUdca2dX4_AffLNz-64VqZ-6uEgACByQAAkQwqUmOZiRotrhbzC8E')
    bot.send_message(message.chat.id, 'He inspired the CREATOR')

@bot.message_handler(commands=['week'])
def start_message3(message):
    keyboard = types.ReplyKeyboardMarkup()
    texts = findParityToday()
    if texts == '—á–µ—Ç–Ω–∞—è':
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å —á—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è!', reply_markup=keyboard)
    else:
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å –Ω–µ—á—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è!', reply_markup=keyboard)

@bot.message_handler(commands=['tech_support'])
def start_message4(message):
        bot.send_message(message.chat.id, '–°–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º - https://t.me/ttemuchin4')

@bot.message_handler(commands=['ttemuchin4father'])
def secret(message):
    keyboard = types.ReplyKeyboardMarkup()
    keyboard.row("/help", "/timetable", "/week", "/mtuci", "/tech_support")
    keyboard.row("/og", "/creator", "/emojiFM", "/upgradebuttons", "/tell")
    bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ —Å–µ–∫—Ä–µ—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –≤ —ç—Ç–æ–º —á–∞—Ç–µ, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é.', reply_markup=keyboard)

@bot.message_handler(commands=['timetable'])
def start_timetable(message):
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    but1 = types.InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', callback_data='day1')
    but2 = types.InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫', callback_data='day2')
    but3 = types.InlineKeyboardButton('–°—Ä–µ–¥–∞', callback_data='day3')
    but4 = types.InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥', callback_data='day4')
    but5 = types.InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞', callback_data='day5')
    but6 = types.InlineKeyboardButton('–°—É–±–±–æ—Ç–∞', callback_data='day6')
    but7 = types.InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é', callback_data='thisweek')
    but8 = types.InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é', callback_data='nextweek')

    keyboard.add(but1, but2, but3, but4, but5, but6, but7, but8)

    bot.send_message(message.chat.id, '–í—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è', reply_markup=keyboard)

@bot.message_handler(commands=['tell'])
def secret_message4(message):
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    but1 = types.InlineKeyboardButton('–í—Å—ë —Ö–æ—Ä–æ—à–æ', callback_data='good')
    but2 = types.InlineKeyboardButton('–°–µ–≥–æ–¥–Ω—è —è —Å—Ç–∞–ª —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ', callback_data='happier')
    but3 = types.InlineKeyboardButton('–°–µ–≥–æ–¥–Ω—è —è –ø—Ä–µ–æ–¥–æ–ª–µ–ª —Å–µ–±—è', callback_data='overcome')
    but4 = types.InlineKeyboardButton('–Ø –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é', callback_data='worried')
    but5 = types.InlineKeyboardButton('–û—á–µ–Ω—å —É—Å—Ç–∞–ª', callback_data='tired')
    but6 = types.InlineKeyboardButton('–í—Å—ë –ø–ª–æ—Ö–æ', callback_data='bad')

    keyboard.add(but1, but2, but3, but4, but5, but6)

    bot.send_message(message.chat.id, '–ö–∞–∫ —Ç–≤–æ–π –¥–µ–Ω—å, –±—Ä–∞—Ç?', reply_markup=keyboard)

@bot.message_handler(commands=['upgradebuttons'])
def secret_message_timetable(message):
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    but1 = types.InlineKeyboardButton('üöÄ–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫üöÄ', callback_data='day1')
    but2 = types.InlineKeyboardButton('üò°–í—Ç–æ—Ä–Ω–∏–∫üò°', callback_data='day2')
    but3 = types.InlineKeyboardButton('‚úä–°—Ä–µ–¥–∞‚úä', callback_data='day3')
    but4 = types.InlineKeyboardButton('üòä–ß–µ—Ç–≤–µ—Ä–≥üòä', callback_data='day4')
    but5 = types.InlineKeyboardButton('‚ùå–ü—è—Ç–Ω–∏—Ü–∞‚ùå', callback_data='day5')
    but6 = types.InlineKeyboardButton('üòâ–°—É–±–±–æ—Ç–∞üòâ', callback_data='day6')
    but7 = types.InlineKeyboardButton('üìÖ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—éüìÖ', callback_data='thisweek')
    but8 = types.InlineKeyboardButton('üìÖ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—éüìÖ', callback_data='nextweek')

    keyboard.add(but1, but2, but3, but4, but5, but6, but7, but8)

    bot.send_message(message.chat.id, '–í—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è', reply_markup=keyboard)    

@bot.message_handler(content_types=['text'])
def answer(message):
    if message.text.lower() == "—Ö–æ—á—É":
        bot.send_message(message.chat.id, '–¢–æ–≥–¥–∞ —Ç—ã –æ–±—Ä–∞—Ç–∏–ª—Å—è –ø–æ –∞–¥—Ä–µ—Å—É')
    elif message.text.lower() == "–µ–≥–æ –Ω–∏–∫—Ç–æ –Ω–µ –∑–Ω–∞–µ—Ç":
        bot.send_message(message.chat.id, '–•–∞!\n–ê –≤–æ—Ç –∏ –Ω–µ—Ç. –ú—ã –∑–Ω–∞–µ–º, –∏ —Ç–µ–±–µ —Å–∫–∞–∂–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ.. –ß—Ç–æ–±—ã —Ç—ã –∑–Ω–∞–ª –∫—É–¥–∞ –∏ –∫–æ–≥–¥–∞ –∏–¥—Ç–∏ –∑–∞ –∑–Ω–∞–Ω–∏—è–º–∏')
    elif message.text.lower() == "–Ω–µ —Ö–æ—á—É" or message.text.lower() == "–Ω–µ—Ç":
        bot.send_message(message.chat.id, '–ù—É –∑–Ω–∞—á–∏—Ç –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–µ–º–µ—Å—Ç—Ä–µ –º—ã —Å –≤–∞–º–∏ –Ω–µ —É–≤–∏–¥–∏–º—Å—è.')
    else:
        bot.send_message(message.chat.id, '–ü—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è, –Ω–µ –ø–æ–Ω—è–ª –≤–∞—Å.')



@bot.callback_query_handler(func=lambda call:True)
def callback(call):
    if call.message:#tell
        if call.data == 'good':
            bot.send_message(call.message.chat.id, 'text good')
        if call.data == 'happier':
            bot.send_message(call.message.chat.id, 'text happier')
        if call.data == 'overcome':
            bot.send_message(call.message.chat.id, 'text overcome')
        if call.data == 'worried':
            bot.send_message(call.message.chat.id, 'text worried')
        if call.data == 'tired':
            bot.send_message(call.message.chat.id, 'text tired')
        if call.data == 'bad':
            bot.send_message(call.message.chat.id, 'text bad')

        parity = findParityToday()
        print(parity)
        if parity == '–Ω–µ—á–µ—Ç–Ω–∞—è':
            if call.data == 'day5':
                texts = db_req("SELECT subjects.name, timetable.room_numb, timetable.start_time, teachers.full_name FROM (timetable JOIN subjects ON subjects.id = timetable.subject) JOIN teachers ON teachers.subject = subjects.id WHERE timetable.day = '–ü—è—Ç–Ω–∏—Ü–∞' AND timetable.parity = 1 ORDER BY start_time;")
                bot.send_message(call.message.chat.id, '–ü—è—Ç–Ω–∏—Ü–∞ (–Ω–µ—á—ë—Ç)\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n' % (texts[0][0], 
    texts[0][1], texts[0][2], texts[0][3], texts[1][0], texts[1][1], texts[1][2], texts[1][3], texts[2][0], texts[2][1], texts[2][2], texts[2][3], texts[3][0], texts[3][1], texts[3][2], texts[3][3]) )
                # bot.edit_message_text(chat_id = call.message.chat.id, message_id=call.message.id, text= '–í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
            if call.data == 'day1':
                texts = db_req("SELECT subjects.name, timetable.room_numb, timetable.start_time, teachers.full_name FROM (timetable JOIN subjects ON subjects.id = timetable.subject) JOIN teachers ON teachers.subject = subjects.id WHERE timetable.day = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' AND timetable.parity = 1 ORDER BY start_time;")
                bot.send_message(call.message.chat.id, '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (–Ω–µ—á—ë—Ç)\n\n%s | %s | %s | %s\n%s | %s | %s | %s' % (texts[0][0],
    texts[0][1], texts[0][2], texts[0][3], texts[1][0], texts[1][1], texts[1][2], texts[1][3]))
            if call.data == 'day2':
                texts = db_req("SELECT subjects.name, timetable.room_numb, timetable.start_time, teachers.full_name FROM (timetable JOIN subjects ON subjects.id = timetable.subject) JOIN teachers ON teachers.subject = subjects.id WHERE timetable.day = '–í—Ç–æ—Ä–Ω–∏–∫' AND timetable.parity = 1 ORDER BY start_time;")
                bot.send_message(call.message.chat.id, '–í—Ç–æ—Ä–Ω–∏–∫ (–Ω–µ—á—ë—Ç)\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s' % (texts[0][0],
    texts[0][1], texts[0][2], texts[0][3], texts[1][0], texts[1][1], texts[1][2], texts[1][3], texts[2][0], texts[2][1], texts[2][2], texts[2][3]))
            if call.data == 'day3':
                texts = db_req("SELECT subjects.name, timetable.room_numb, timetable.start_time, teachers.full_name FROM (timetable JOIN subjects ON subjects.id = timetable.subject) JOIN teachers ON teachers.subject = subjects.id WHERE timetable.day = '–°—Ä–µ–¥–∞' AND timetable.parity = 1 ORDER BY start_time;")
                bot.send_message(call.message.chat.id, '–°—Ä–µ–¥–∞ (–Ω–µ—á—ë—Ç)\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s' % (texts[0][0],
    texts[0][1], texts[0][2], texts[0][3], texts[1][0], texts[1][1], texts[1][2], texts[1][3], texts[2][0], texts[2][1], texts[2][2], texts[2][3]))
            if call.data == 'day4':
                texts = db_req("SELECT subjects.name, timetable.room_numb, timetable.start_time, teachers.full_name FROM (timetable JOIN subjects ON subjects.id = timetable.subject) JOIN teachers ON teachers.subject = subjects.id WHERE timetable.day = '–ß–µ—Ç–≤–µ—Ä–≥' AND timetable.parity = 1 ORDER BY start_time;")
                bot.send_message(call.message.chat.id, '–ß–µ—Ç–≤–µ—Ä–≥ (–Ω–µ—á—ë—Ç)\n\n%s | %s | %s | %s\n%s | %s | %s | %s' % (texts[0][0],
    texts[0][1], texts[0][2], texts[0][3], texts[1][0], texts[1][1], texts[1][2], texts[1][3]))
            if call.data == 'day6':
                bot.send_message(call.message.chat.id, '–ü–æ —Å—É–±–±–æ—Ç–∞–º –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –∏–∑ –¥–æ–º–∞')
            if call.data == 'thisweek':
                texts = db_req("SELECT subjects.name, timetable.room_numb, timetable.start_time, teachers.full_name FROM (timetable JOIN subjects ON subjects.id = timetable.subject) JOIN teachers ON teachers.subject = subjects.id WHERE timetable.parity = 1 GROUP BY day ORDER BY start_time;")
                bot.send_message(call.message.chat.id,
'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ—á–µ—Ç–Ω—É—é –Ω–µ–¥–µ–ª—é\n\n–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–í—Ç–æ—Ä–Ω–∏–∫\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–°—Ä–µ–¥–∞\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–ß–µ—Ç–≤–µ—Ä–≥\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–ü—è—Ç–Ω–∏—Ü–∞\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s' % (texts[0][0], texts[0][1], texts[0][2], texts[0][3], 
    texts[1][0], texts[1][1], texts[1][2], texts[1][3], texts[2][0], texts[2][1], texts[2][2], texts[2][3], texts[3][0], texts[3][1], texts[3][2], texts[3][3], texts[4][0], texts[4][1], texts[4][2], texts[4][3], 
    texts[5][0], texts[5][1], texts[5][2], texts[5][3], texts[6][0], texts[6][1], texts[6][2], texts[6][3], texts[7][0], texts[7][1], texts[7][2], texts[7][3], texts[8][0], texts[8][1], texts[8][2], texts[8][3], 
    texts[9][0], texts[9][1], texts[9][2], texts[9][3], texts[10][0], texts[10][1], texts[10][2], texts[10][3], texts[11][0], texts[11][1], texts[11][2], texts[11][3], texts[12][0], texts[12][1], texts[12][2], texts[12][3], texts[13][0], texts[13][1], texts[13][2], texts[13][3]))    

            if call.data == 'nextweek':
                texts = db_req("SELECT subjects.name, timetable.room_numb, timetable.start_time, teachers.full_name FROM (timetable JOIN subjects ON subjects.id = timetable.subject) JOIN teachers ON teachers.subject = subjects.id WHERE timetable.parity = 2 GROUP BY day ORDER BY start_time;")
                bot.send_message(call.message.chat.id, 
'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —á–µ—Ç–Ω—É—é –Ω–µ–¥–µ–ª—é\n\n–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–í—Ç–æ—Ä–Ω–∏–∫\n\n=====\n\n–°—Ä–µ–¥–∞\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–ß–µ—Ç–≤–µ—Ä–≥\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–ü—è—Ç–Ω–∏—Ü–∞\n\n%s | %s | %s | %s\n%s | %s | %s | %s' % (texts[0][0], texts[0][1], texts[0][2], texts[0][3],
    texts[1][0], texts[1][1], texts[1][2], texts[1][3], texts[2][0], texts[2][1], texts[2][2], texts[2][3], texts[3][0], texts[3][1], texts[3][2], texts[3][3], texts[4][0], texts[4][1], texts[4][2], texts[4][3], 
    texts[5][0], texts[5][1], texts[5][2], texts[5][3], texts[6][0], texts[6][1], texts[6][2], texts[6][3], texts[7][0], texts[7][1], texts[7][2], texts[7][3], texts[8][0], texts[8][1], texts[8][2], texts[8][3], 
    texts[9][0], texts[9][1], texts[9][2], texts[9][3], texts[10][0], texts[10][1], texts[10][2], texts[10][3]))   

# —á–µ—Ç–Ω–∞—è
        else:
            if call.data == 'day1':
                texts = db_req("SELECT subjects.name, timetable.room_numb, timetable.start_time, teachers.full_name FROM (timetable JOIN subjects ON subjects.id = timetable.subject) JOIN teachers ON teachers.subject = subjects.id WHERE timetable.day = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' AND timetable.parity = 2 ORDER BY start_time;")
                bot.send_message(call.message.chat.id, '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (—á—ë—Ç)\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s' % (texts[0][0],
    texts[0][1], texts[0][2], texts[0][3], texts[1][0], texts[1][1], texts[1][2], texts[1][3], texts[2][0], texts[2][1], texts[2][2], texts[2][3], texts[3][0], texts[3][1], texts[3][2], texts[3][3]))
            if call.data == 'day2':
                bot.send_message(call.message.chat.id, '–í—Ç–æ—Ä–Ω–∏–∫ (—á—ë—Ç)\n\n =====')
            if call.data == 'day3':
                texts = db_req("SELECT subjects.name, timetable.room_numb, timetable.start_time, teachers.full_name FROM (timetable JOIN subjects ON subjects.id = timetable.subject) JOIN teachers ON teachers.subject = subjects.id WHERE timetable.day = '–°—Ä–µ–¥–∞' AND timetable.parity = 2 ORDER BY start_time;")
                bot.send_message(call.message.chat.id, '–°—Ä–µ–¥–∞ (—á—ë—Ç)\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s' % (texts[0][0], 
    texts[0][1], texts[0][2], texts[0][3], texts[1][0], texts[1][1], texts[1][2], texts[1][3], texts[2][0], texts[2][1], texts[2][2], texts[2][3]))
            if call.data == 'day4':
                texts = db_req("SELECT subjects.name, timetable.room_numb, timetable.start_time, teachers.full_name FROM (timetable JOIN subjects ON subjects.id = timetable.subject) JOIN teachers ON teachers.subject = subjects.id WHERE timetable.day = '–ß–µ—Ç–≤–µ—Ä–≥' AND timetable.parity = 2 ORDER BY start_time;")
                bot.send_message(call.message.chat.id, '–ß–µ—Ç–≤–µ—Ä–≥ (—á—ë—Ç)\n\n%s | %s | %s | %s\n%s | %s | %s | %s' % (texts[0][0], 
    texts[0][1], texts[0][2], texts[0][3], texts[1][0], texts[1][1], texts[1][2], texts[1][3]))
            if call.data == 'day5':
                texts = db_req("SELECT subjects.name, timetable.room_numb, timetable.start_time, teachers.full_name FROM (timetable JOIN subjects ON subjects.id = timetable.subject) JOIN teachers ON teachers.subject = subjects.id WHERE timetable.day = '–ü—è—Ç–Ω–∏—Ü–∞' AND timetable.parity = 2 ORDER BY start_time;")
                bot.send_message(call.message.chat.id, '–ü—è—Ç–Ω–∏—Ü–∞ (—á—ë—Ç)\n\n%s | %s | %s | %s\n%s | %s | %s | %s' % (texts[0][0], 
    texts[0][1], texts[0][2], texts[0][3], texts[1][0], texts[1][1], texts[1][2], texts[1][3]))
            if call.data == 'day6':
                bot.send_message(call.message.chat.id, '–ü–æ —Å—É–±–±–æ—Ç–∞–º –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –∏–∑ –¥–æ–º–∞')
            if call.data == 'thisweek':
                texts = db_req("SELECT subjects.name, timetable.room_numb, timetable.start_time, teachers.full_name FROM (timetable JOIN subjects ON subjects.id = timetable.subject) JOIN teachers ON teachers.subject = subjects.id WHERE timetable.parity = 2 ORDER BY timetable.id;")
                bot.send_message(call.message.chat.id, 
'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —á–µ—Ç–Ω—É—é –Ω–µ–¥–µ–ª—é\n\n–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–í—Ç–æ—Ä–Ω–∏–∫\n\n=====\n\n–°—Ä–µ–¥–∞\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–ß–µ—Ç–≤–µ—Ä–≥\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–ü—è—Ç–Ω–∏—Ü–∞\n\n%s | %s | %s | %s\n%s | %s | %s | %s' % (texts[0][0], texts[0][1], texts[0][2], texts[0][3],
    texts[1][0], texts[1][1], texts[1][2], texts[1][3], texts[2][0], texts[2][1], texts[2][2], texts[2][3], texts[3][0], texts[3][1], texts[3][2], texts[3][3], texts[4][0], texts[4][1], texts[4][2], texts[4][3], 
    texts[5][0], texts[5][1], texts[5][2], texts[5][3], texts[6][0], texts[6][1], texts[6][2], texts[6][3], texts[7][0], texts[7][1], texts[7][2], texts[7][3], texts[8][0], texts[8][1], texts[8][2], texts[8][3], 
    texts[9][0], texts[9][1], texts[9][2], texts[9][3], texts[10][0], texts[10][1], texts[10][2], texts[10][3]))
            if call.data == 'nextweek':
                texts = db_req("SELECT subjects.name, timetable.room_numb, timetable.start_time, teachers.full_name FROM (timetable JOIN subjects ON subjects.id = timetable.subject) JOIN teachers ON teachers.subject = subjects.id WHERE timetable.parity = 1 ORDER BY timetable.id;")
                bot.send_message(call.message.chat.id,
'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ—á–µ—Ç–Ω—É—é –Ω–µ–¥–µ–ª—é\n\n–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–í—Ç–æ—Ä–Ω–∏–∫\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–°—Ä–µ–¥–∞\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–ß–µ—Ç–≤–µ—Ä–≥\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n\n–ü—è—Ç–Ω–∏—Ü–∞\n\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s\n%s | %s | %s | %s' % (texts[0][0], texts[0][1], texts[0][2], texts[0][3], 
    texts[1][0], texts[1][1], texts[1][2], texts[1][3], texts[2][0], texts[2][1], texts[2][2], texts[2][3], texts[3][0], texts[3][1], texts[3][2], texts[3][3], texts[4][0], texts[4][1], texts[4][2], texts[4][3], 
    texts[5][0], texts[5][1], texts[5][2], texts[5][3], texts[6][0], texts[6][1], texts[6][2], texts[6][3], texts[7][0], texts[7][1], texts[7][2], texts[7][3], texts[8][0], texts[8][1], texts[8][2], texts[8][3], 
    texts[9][0], texts[9][1], texts[9][2], texts[9][3], texts[10][0], texts[10][1], texts[10][2], texts[10][3], texts[11][0], texts[11][1], texts[11][2], texts[11][3], texts[12][0], texts[12][1], texts[12][2], texts[12][3], texts[13][0], texts[13][1], texts[13][2], texts[13][3]))    
    
bot.infinity_polling() 


